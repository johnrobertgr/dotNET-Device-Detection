//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FiftyOne.Foundation.UI {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FiftyOne.Foundation.UI.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate.
        /// </summary>
        internal static string ActivateButtonText {
            get {
                return ResourceManager.GetString("ActivateButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;{1} Data is active. Thank you.&lt;/div&gt;.
        /// </summary>
        internal static string ActivatedMessageHtml {
            get {
                return ResourceManager.GetString("ActivatedMessageHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Paste your data licence key into the textbox below. Select &quot;Activate&quot; to use the licence key with this web site.&lt;/p&gt;.
        /// </summary>
        internal static string ActivateInstructionsHtml {
            get {
                return ResourceManager.GetString("ActivateInstructionsHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;&lt;p&gt;The data source provided does not contain valid data.&lt;/p&gt;&lt;/div&gt;.
        /// </summary>
        internal static string ActivationDataInvalidHtml {
            get {
                return ResourceManager.GetString("ActivationDataInvalidHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;&lt;p&gt;The fiftyOne/detection element of the config file &apos;{1}&apos; could not be inserted. Please ensure the following text is present between the fiftyOne tags and try activating the licence key again.&lt;/p&gt;
        ///&lt;br/&gt;
        ///&lt;span style=&quot;margin-left: 0px !important;&quot;&gt;
        ///&lt;code style=&quot;color: #000000;&quot;&gt;&amp;lt;&lt;/code&gt;
        ///&lt;code&gt;&lt;span style=&quot;color: #006699;&quot;&gt;&lt;strong&gt;detection&lt;/strong&gt;&lt;/span&gt;&lt;/code&gt;&amp;nbsp;
        ///&lt;code style=&quot;color: #808080;&quot;&gt;binaryFilePath&lt;/code&gt;
        ///&lt;code style=&quot;color: #000000;&quot;&gt;=&lt;/code&gt;
        ///&lt;code style=&quot;color: blue [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ActivationFailureCouldNotUpdateConfigHtml {
            get {
                return ResourceManager.GetString("ActivationFailureCouldNotUpdateConfigHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;
        ///&lt;p&gt;The device data file &apos;{1}&apos; could not be saved. Check the user &apos;{2}&apos; has write access to the folder, or change the folder location to one with write access.&lt;/p&gt;
        ///&lt;/div&gt;.
        /// </summary>
        internal static string ActivationFailureCouldNotWriteDataFileHtml {
            get {
                return ResourceManager.GetString("ActivationFailureCouldNotWriteDataFileHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;&lt;p&gt;The licence file &apos;{1}&apos; could not be written to this web sites bin folder &apos;{2}&apos;. Create a text file with the extension .lic and paste the licence key  into the file. Save the text file in the bin folder.&lt;/p&gt;&lt;/div&gt;.
        /// </summary>
        internal static string ActivationFailureCouldNotWriteLicenceFileHtml {
            get {
                return ResourceManager.GetString("ActivationFailureCouldNotWriteLicenceFileHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;&lt;p&gt;Whoops. There was a problem activating the licence key or uploading premium data. We&apos;re unsure why this happened. Please &lt;a href=&quot;https://51degrees.com/contact-us&quot;&gt;Contact Us&lt;/a&gt; providing details of your web site implementation, relevent entries from your log file, and we&apos;ll try and help you.&lt;/p&gt;&lt;/div&gt;.
        /// </summary>
        internal static string ActivationFailureGenericHtml {
            get {
                return ResourceManager.GetString("ActivationFailureGenericHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;&lt;p&gt;We were unable to reach the 51Degrees licence validation web site at the host &apos;{1}&apos;. This could be for one of the following reasons.&lt;/p&gt;
        ///&lt;ul&gt;
        ///&lt;li&gt;
        ///This web site is running in medium trust mode and the 
        ///&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.web.configuration.trustsection.originurl(v=VS.80).aspx&quot;&gt;originUrl&lt;/a&gt; 
        ///attribute in the web.config does not allow access the host &apos;{1}&apos;. Change the originUrl to include &apos;{1}&apos;. Multiple host names can 
        ///be seperated by | signs.&lt;/l [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ActivationFailureHttpHtml {
            get {
                return ResourceManager.GetString("ActivationFailureHttpHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;&lt;p&gt;The licence key provided failed validation. Please check the license key is validate with your reseller.&lt;/p&gt;&lt;/div&gt;.
        /// </summary>
        internal static string ActivationFailureInvalidHtml {
            get {
                return ResourceManager.GetString("ActivationFailureInvalidHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;&lt;p&gt;The data source provided could not be read from.&lt;/p&gt;&lt;/div&gt;.
        /// </summary>
        internal static string ActivationStreamFailureHtml {
            get {
                return ResourceManager.GetString("ActivationStreamFailureHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;&lt;p&gt;Success. Select the &quot;Refresh&quot; button to reload the web page and and start using Device Data.  Note: There may be a short delay as the application restarts.&lt;/p&gt;&lt;/div&gt;.
        /// </summary>
        internal static string ActivationSuccessHtml {
            get {
                return ResourceManager.GetString("ActivationSuccessHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;There was a problem recording the configuration change. If the web site is operating in a medium trust environment or modify permission to the configuration file(s) is not granted to the application pool identity you will have to change this value in the configuration file manually. Find the fiftyOne/detection element in the config file and set the autoUpdate attribute.&lt;/div&gt;.
        /// </summary>
        internal static string AutoUpdateErrorHtml {
            get {
                return ResourceManager.GetString("AutoUpdateErrorHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;Automatic data file updates are disabled.&lt;br/&gt;You may need to restart the web site for the change to become effective.&lt;/div&gt;.
        /// </summary>
        internal static string AutoUpdateFalseHtml {
            get {
                return ResourceManager.GetString("AutoUpdateFalseHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable automatic data file updates.
        /// </summary>
        internal static string AutoUpdateText {
            get {
                return ResourceManager.GetString("AutoUpdateText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;Automatic data file updates are enabled.&lt;br/&gt;You may need to restart the web site for the change to become effective.&lt;/div&gt;.
        /// </summary>
        internal static string AutoUpdateTrueHtml {
            get {
                return ResourceManager.GetString("AutoUpdateTrueHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other Vendors.
        /// </summary>
        internal static string BackButtonDevicesText {
            get {
                return ResourceManager.GetString("BackButtonDevicesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other {0} Devices.
        /// </summary>
        internal static string BackButtonDeviceText {
            get {
                return ResourceManager.GetString("BackButtonDeviceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;There was a problem recording the configuration change. If the web site is operating in a medium trust environment or modify permission to the configuration file(s) is not granted to the application pool identity you will have to change this value in the configuration file manually. Find the fiftyOne/detection element in the config file and set the enabled attribute.&lt;/div&gt;.
        /// </summary>
        internal static string DeviceDetectionErrorHtml {
            get {
                return ResourceManager.GetString("DeviceDetectionErrorHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;Device detection is disabled.&lt;br/&gt;You may need to restart the web site for the change to become effective.&lt;/div&gt;.
        /// </summary>
        internal static string DeviceDetectionFalseHtml {
            get {
                return ResourceManager.GetString("DeviceDetectionFalseHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable device detection.
        /// </summary>
        internal static string DeviceDetectionText {
            get {
                return ResourceManager.GetString("DeviceDetectionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;Device detection is enabled.&lt;br/&gt;You may need to restart the web site for the change to become effective.&lt;/div&gt;.
        /// </summary>
        internal static string DeviceDetectionTrueHtml {
            get {
                return ResourceManager.GetString("DeviceDetectionTrueHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Scroll down to view all .&lt;/p&gt;.
        /// </summary>
        internal static string DeviceExplorerDeviceInstructionsHtml {
            get {
                return ResourceManager.GetString("DeviceExplorerDeviceInstructionsHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Select a model to view its hardware specifications.&lt;/p&gt;.
        /// </summary>
        internal static string DeviceExplorerModelsInstructionsHtml {
            get {
                return ResourceManager.GetString("DeviceExplorerModelsInstructionsHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Select a hardware vendor to view the device models produced. Alternatively search for devices by model or popular name.&lt;/p&gt;.
        /// </summary>
        internal static string DeviceExplorerVendorsHtml {
            get {
                return ResourceManager.GetString("DeviceExplorerVendorsHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Devices.
        /// </summary>
        internal static string DevicesVendorHeading {
            get {
                return ResourceManager.GetString("DevicesVendorHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://51Degrees.com/Products/DeviceData.
        /// </summary>
        internal static string FiftyOneDegreesUrl {
            get {
                return ResourceManager.GetString("FiftyOneDegreesUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter key word to search.
        /// </summary>
        internal static string FinderFreeTextLabelText {
            get {
                return ResourceManager.GetString("FinderFreeTextLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the key word in the pattern &quot;Nokia N95&quot;. Single word pattern will check against both Vendor and Model..
        /// </summary>
        internal static string FinderFreeTextLabelToolTip {
            get {
                return ResourceManager.GetString("FinderFreeTextLabelToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Model.
        /// </summary>
        internal static string FinderModelLabelText {
            get {
                return ResourceManager.GetString("FinderModelLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Device Model from the selected Vendor ex: N95.
        /// </summary>
        internal static string FinderModelLabelToolTip {
            get {
                return ResourceManager.GetString("FinderModelLabelToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Vendor.
        /// </summary>
        internal static string FinderVendorLabelText {
            get {
                return ResourceManager.GetString("FinderVendorLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Device Vendor to search ex: Nokia.
        /// </summary>
        internal static string FinderVendorLabelToolTip {
            get {
                return ResourceManager.GetString("FinderVendorLabelToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;There was a problem recording the change to image optimisation. If the web site is operating in a medium trust environment or modify permission to the configuration file(s) is not granted to the application pool identity you will have to change this value in the configuration file manually. Find the fiftyOne/imageOptimisation element in the config file and set the enabled attribute.&lt;/div&gt;.
        /// </summary>
        internal static string ImageOptimiserErrorHtml {
            get {
                return ResourceManager.GetString("ImageOptimiserErrorHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;Image optimisation features are now disabled.&lt;br/&gt;You may need to restart the web site for the change to become effective.&lt;/div&gt;.
        /// </summary>
        internal static string ImageOptimiserFalseHtml {
            get {
                return ResourceManager.GetString("ImageOptimiserFalseHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable image optimisation features.
        /// </summary>
        internal static string ImageOptimiserText {
            get {
                return ResourceManager.GetString("ImageOptimiserText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;Image optimisation features are now enabled.&lt;br/&gt;You may need to restart the web site for the change to become effective.&lt;/div&gt;.
        /// </summary>
        internal static string ImageOptimiserTrueHtml {
            get {
                return ResourceManager.GetString("ImageOptimiserTrueHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  // constants to control animations
        ///var tickTime = 50; // time in milliseconds a &apos;tick&apos; lasts for
        ///var transitionTime = 500; // time in milliseconds a fade should last for
        ///var imageDelay = 2000; // time in milliseconds a image will show for without fading
        ///
        /// // used to store image data between ticks
        ///var hoveredImageData = null;
        ///
        /// // fired from img onmouseover event. begins transitions.
        ///function ImageHovered(element, urls) {
        ///    hoveredImageData = new Object();
        ///    hoveredImageData.Element = element [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ImageRotationScript {
            get {
                return ResourceManager.GetString("ImageRotationScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function toggle(e, id, style) {
        ///    var profile = document.getElementById(id);
        ///    if (profile.style.display == &apos;block&apos;) {
        ///        profile.style.display = &apos;none&apos;;
        ///        e.innerHTML = &apos;+&apos;;
        ///    } else {
        ///        profile.style.display = style;
        ///        e.innerHTML = &apos;-&apos;;
        ///    }
        ///}.
        /// </summary>
        internal static string JavaScriptToggle {
            get {
                return ResourceManager.GetString("JavaScriptToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UserAgent Test Results.
        /// </summary>
        internal static string MatchCaption {
            get {
                return ResourceManager.GetString("MatchCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;The list of properties and descriptions explain how to use the available device data. Use the [+] icon to display possible values associated with the property.&lt;/p&gt;.
        /// </summary>
        internal static string PropertyDictionaryInstructions {
            get {
                return ResourceManager.GetString("PropertyDictionaryInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h1&gt;Legend&lt;/h1&gt;
        ///&lt;p class=&quot;datasets&quot;&gt;Indicates the data set versions the property is contained within.&lt;/p&gt;
        ///&lt;p class=&quot;type&quot;&gt;The strongly typed value the property returns when used with APIs which support strong types.&lt;/p&gt;
        ///&lt;p&gt;[L] = the property can return multiple values as a list.&lt;/p&gt;
        ///&lt;p&gt;[O] = the property is obsolete and will be replaced in a future version. See the description for details of the newer preferred method.&lt;/p&gt;.
        /// </summary>
        internal static string PropertyDictionaryLegend {
            get {
                return ResourceManager.GetString("PropertyDictionaryLegend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h3&gt;General&lt;/h3&gt;.
        /// </summary>
        internal static string RedirectBasicHeadingHtml {
            get {
                return ResourceManager.GetString("RedirectBasicHeadingHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide.
        /// </summary>
        internal static string RedirectButtonHideText {
            get {
                return ResourceManager.GetString("RedirectButtonHideText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Location.
        /// </summary>
        internal static string RedirectButtonNewLocationText {
            get {
                return ResourceManager.GetString("RedirectButtonNewLocationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        internal static string RedirectButtonNewText {
            get {
                return ResourceManager.GetString("RedirectButtonNewText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        internal static string RedirectButtonRemoveText {
            get {
                return ResourceManager.GetString("RedirectButtonRemoveText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        internal static string RedirectButtonResetText {
            get {
                return ResourceManager.GetString("RedirectButtonResetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show.
        /// </summary>
        internal static string RedirectButtonShowText {
            get {
                return ResourceManager.GetString("RedirectButtonShowText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        internal static string RedirectButtonUpdateText {
            get {
                return ResourceManager.GetString("RedirectButtonUpdateText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file used to store the details of devices that have previously accessed the web site to determine if they&apos;re making a subsequent request. Needed to ensure multiple worker processes have a consistent view of previous activity. (Optional – random behaviour will be  experienced if not specified on web sites with more than one worker processes). In Windows Azure this value becomes the name of devices cloud table that will be used instead of a file..
        /// </summary>
        internal static string RedirectDevicesFileToolTip {
            get {
                return ResourceManager.GetString("RedirectDevicesFileToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If unchecked redirection will be disabled..
        /// </summary>
        internal static string RedirectEnabledToolTip {
            get {
                return ResourceManager.GetString("RedirectEnabledToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices file must contain a valid file..
        /// </summary>
        internal static string RedirectErrorMessageDevicesFileText {
            get {
                return ResourceManager.GetString("RedirectErrorMessageDevicesFileText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate unique destination location names &apos;{0}&apos; are not allowed..
        /// </summary>
        internal static string RedirectErrorMessageDuplicatesText {
            get {
                return ResourceManager.GetString("RedirectErrorMessageDuplicatesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match expression must evaluate to a valid regular expression..
        /// </summary>
        internal static string RedirectErrorMessageMatchExpressionText {
            get {
                return ResourceManager.GetString("RedirectErrorMessageMatchExpressionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mobile home page regex must evaluate to a valid regular expression..
        /// </summary>
        internal static string RedirectErrorMessageMobileHomePageRegexText {
            get {
                return ResourceManager.GetString("RedirectErrorMessageMobileHomePageRegexText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mobile home page URL must contain a valid absolute or relative URL..
        /// </summary>
        internal static string RedirectErrorMessageMobileHomePageUrlText {
            get {
                return ResourceManager.GetString("RedirectErrorMessageMobileHomePageUrlText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name field must be provided..
        /// </summary>
        internal static string RedirectErrorMessageNameFieldText {
            get {
                return ResourceManager.GetString("RedirectErrorMessageNameFieldText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout must be a numeric value greater than or equal to zero..
        /// </summary>
        internal static string RedirectErrorMessageTimeOutText {
            get {
                return ResourceManager.GetString("RedirectErrorMessageTimeOutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URL is not in a valid format..
        /// </summary>
        internal static string RedirectErrorMessageUrlFormatText {
            get {
                return ResourceManager.GetString("RedirectErrorMessageUrlFormatText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to true only the first request received by the web site is redirected to the mobileUrl when the site is accessed from a mobile device. (Optional – defaults to true).
        /// </summary>
        internal static string RedirectFirstRequestOnlyToolTip {
            get {
                return ResourceManager.GetString("RedirectFirstRequestOnlyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices File.
        /// </summary>
        internal static string RedirectLabelDevicesFileText {
            get {
                return ResourceManager.GetString("RedirectLabelDevicesFileText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string RedirectLabelEnabledText {
            get {
                return ResourceManager.GetString("RedirectLabelEnabledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters.
        /// </summary>
        internal static string RedirectLabelFiltersText {
            get {
                return ResourceManager.GetString("RedirectLabelFiltersText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First Request Only.
        /// </summary>
        internal static string RedirectLabelFirstRequestOnlyText {
            get {
                return ResourceManager.GetString("RedirectLabelFirstRequestOnlyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match Expression.
        /// </summary>
        internal static string RedirectLabelMatchExpressionText {
            get {
                return ResourceManager.GetString("RedirectLabelMatchExpressionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mobile Home Page Url.
        /// </summary>
        internal static string RedirectLabelMobileHomePageUrlText {
            get {
                return ResourceManager.GetString("RedirectLabelMobileHomePageUrlText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mobile Pages Regex.
        /// </summary>
        internal static string RedirectLabelMobilePagesRegexText {
            get {
                return ResourceManager.GetString("RedirectLabelMobilePagesRegexText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original Url.
        /// </summary>
        internal static string RedirectLabelOriginalUrlAsQueryStringText {
            get {
                return ResourceManager.GetString("RedirectLabelOriginalUrlAsQueryStringText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property.
        /// </summary>
        internal static string RedirectLabelPropertyText {
            get {
                return ResourceManager.GetString("RedirectLabelPropertyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirect Url.
        /// </summary>
        internal static string RedirectLabelRedirectUrlText {
            get {
                return ResourceManager.GetString("RedirectLabelRedirectUrlText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout.
        /// </summary>
        internal static string RedirectLabelTimeoutText {
            get {
                return ResourceManager.GetString("RedirectLabelTimeoutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unique Name.
        /// </summary>
        internal static string RedirectLabelUniqueNameText {
            get {
                return ResourceManager.GetString("RedirectLabelUniqueNameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        internal static string RedirectLabelValueText {
            get {
                return ResourceManager.GetString("RedirectLabelValueText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A regular expression used to evaluate the value of the property. (Mandatory).
        /// </summary>
        internal static string RedirectLocationFilterMatchExpressionToolTip {
            get {
                return ResourceManager.GetString("RedirectLocationFilterMatchExpressionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property of HttpRequest, HttpRequest.Browser or 51Degrees property to use when evaluating the matchExpression attribute. (Mandatory).
        /// </summary>
        internal static string RedirectLocationFilterPropertyToolTip {
            get {
                return ResourceManager.GetString("RedirectLocationFilterPropertyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The location element contains a collection of criteria or filters that all need to match for the location to be used..
        /// </summary>
        internal static string RedirectLocationFiltersToolTip {
            get {
                return ResourceManager.GetString("RedirectLocationFiltersToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can be used to provide a regular expression which will take the requesting URL as input match segments to be used in place of numeric parameters contained within {} in the url attribute. (Optional).
        /// </summary>
        internal static string RedirectLocationMatchExpressionToolTip {
            get {
                return ResourceManager.GetString("RedirectLocationMatchExpressionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A unique identifier for the location. Used for debugging in the log file.(Mandatory).
        /// </summary>
        internal static string RedirectLocationNameToolTip {
            get {
                return ResourceManager.GetString("RedirectLocationNameToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h3&gt;Redirect Locations&lt;/h3&gt;.
        /// </summary>
        internal static string RedirectLocationsHeadingHtml {
            get {
                return ResourceManager.GetString("RedirectLocationsHeadingHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL of the redirect location to use if all the properties in the collection match. (Mandatory).
        /// </summary>
        internal static string RedirectLocationUrlToolTip {
            get {
                return ResourceManager.GetString("RedirectLocationUrlToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A regular expression that when applied to the current request Path (context.Request.AppRelativeCurrentExecutionFilePath) or the requesting Urlwill return true if it should be considered a mobile page. Use this attribute to tell redirection about mobile pages derived from base
        /// classes such as System.Web.UI.Page. Redirection needs to be aware of mobile pages so that requests to these pages can be ignored. Any page that derives from System.Web.UI.MobileControls.MobilePage will automatically be treated as a m [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RedirectMobilePagesRegexToolTip {
            get {
                return ResourceManager.GetString("RedirectMobilePagesRegexToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A URL to direct mobile devices to instead of the normal web sites landing page. Will be used after all the locations have been evaluated if one did not match and a mobile device is present. (Optional).
        /// </summary>
        internal static string RedirectMobileRedirectUrlToolTip {
            get {
                return ResourceManager.GetString("RedirectMobileRedirectUrlToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to true the redirected URL will have the original requesting Url encoded and included as the origUrl query string parameter in the redirected Url. This will enable the mobile home page to determine the original requested resource providing the option to display a mobile friendly version. (Optional [but highly recommended] – defaults to false).
        /// </summary>
        internal static string RedirectOriginalUrlAsQueryStringToolTip {
            get {
                return ResourceManager.GetString("RedirectOriginalUrlAsQueryStringToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of minutes of inactivity that should occur before the requesting device should be treated as making a new request to the web site for the purposes of redirection. If the session is available the session timeout will be used and override this value. (Optional -defaults to 20 minutes).
        /// </summary>
        internal static string RedirectTimeoutToolTip {
            get {
                return ResourceManager.GetString("RedirectTimeoutToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;{0}&lt;/p&gt;&lt;p&gt;{1}&lt;/p&gt;.
        /// </summary>
        internal static string RedirectUpdateGeneralDetailedFailureHtml {
            get {
                return ResourceManager.GetString("RedirectUpdateGeneralDetailedFailureHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Exception updating configuration &apos;{0}&apos;.&lt;/p&gt;&lt;p&gt;Check the web sites application pool identity can modify the configuration files. If operating in a Medium trust environment switch to Full trust to complete the configuration changes.&lt;/p&gt;&lt;p&gt;Alternatively cut and paste the following XML into your configuration file.&lt;/p&gt;&lt;p&gt;&lt;code&gt;{1}&lt;/code&gt;&lt;/p&gt;.
        /// </summary>
        internal static string RedirectUpdateGeneralFailureHtml {
            get {
                return ResourceManager.GetString("RedirectUpdateGeneralFailureHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Configuration updated successfully.&lt;/p&gt;&lt;p&gt;The application may need to be restarted for the redirection rules to become active.&lt;/p&gt;.
        /// </summary>
        internal static string RedirectUpdateSuccessHtml {
            get {
                return ResourceManager.GetString("RedirectUpdateSuccessHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        internal static string RefreshButtonText {
            get {
                return ResourceManager.GetString("RefreshButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Related Browser &amp; Software Combinations.
        /// </summary>
        internal static string RelatedDevicesHeading {
            get {
                return ResourceManager.GetString("RelatedDevicesHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search.
        /// </summary>
        internal static string SearchBoxButtonText {
            get {
                return ResourceManager.GetString("SearchBoxButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vendor, Model or Popular Name.
        /// </summary>
        internal static string SearchBoxInstructionText {
            get {
                return ResourceManager.GetString("SearchBoxInstructionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;There was a problem recording your share usage data preference. If the web site is operating in a medium trust environment or modify permission to the configuration file(s) is not granted to the application pool identity you will have to change this value in the configuration file manually. Find the fiftyOne/detection element in the config file and set the shareUsage attribute.&lt;/div&gt;.
        /// </summary>
        internal static string ShareUsageErrorHtml {
            get {
                return ResourceManager.GetString("ShareUsageErrorHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;We&apos;re sorry you&apos;ve decided not to share usage data. We hope you&apos;ll reconsider as usage data helps us provide you a better product. Find out more &lt;a href=&quot;https://51degrees.com/support/faqs/usage-data&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;br/&gt;You may need to restart the web site for the change to become effective.&lt;/div&gt;.
        /// </summary>
        internal static string ShareUsageFalseHtml {
            get {
                return ResourceManager.GetString("ShareUsageFalseHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn More.
        /// </summary>
        internal static string ShareUsageLinkText {
            get {
                return ResourceManager.GetString("ShareUsageLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Share usage data with 51Degrees.
        /// </summary>
        internal static string ShareUsageText {
            get {
                return ResourceManager.GetString("ShareUsageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;Thank you for sharing usage data and helping improve this product.&lt;br/&gt;You may need to restart the web site for the change to become effective.&lt;/div&gt;.
        /// </summary>
        internal static string ShareUsageTrueHtml {
            get {
                return ResourceManager.GetString("ShareUsageTrueHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://51degrees.com/support/faqs/usage-data.
        /// </summary>
        internal static string ShareUsageUrl {
            get {
                return ResourceManager.GetString("ShareUsageUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;{0}&quot;&gt;&lt;span&gt;Format:&amp;nbsp;&lt;b&gt;{1}&lt;/b&gt;&lt;/span&gt;&amp;nbsp;&lt;span&gt;Published:&amp;nbsp;&lt;b&gt;{2:d}&lt;/b&gt;&lt;/span&gt;&amp;nbsp;&lt;span&gt;Properties:&amp;nbsp;&lt;b&gt;{3}&lt;/b&gt;&lt;/span&gt;&amp;nbsp;&lt;span&gt;Detection:&amp;nbsp;&lt;b&gt;{4}ms&lt;/b&gt;&lt;/span&gt;&amp;nbsp;&lt;span&gt;Avg.&amp;nbsp;Res:&amp;nbsp;&lt;b&gt;{5:ss\.fff}&lt;/b&gt;&lt;/span&gt;&amp;nbsp;&lt;span&gt;Avg.&amp;nbsp;Comp:&amp;nbsp;&lt;b&gt;{6:ss\.fff}&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;.
        /// </summary>
        internal static string StatsHtml {
            get {
                return ResourceManager.GetString("StatsHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh Data.
        /// </summary>
        internal static string StatsRefreshButtonText {
            get {
                return ResourceManager.GetString("StatsRefreshButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show or hide available values.
        /// </summary>
        internal static string ToggleToolTip {
            get {
                return ResourceManager.GetString("ToggleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Displaying the top {0} latest devices.&lt;/p&gt;.
        /// </summary>
        internal static string TopDevicesText {
            get {
                return ResourceManager.GetString("TopDevicesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Thank you for using Lite device data from 51Degrees. You can now upgrade to Premium data whenever you want, giving you a range of benefits that include:&lt;/p&gt;
        ///&lt;p&gt;- Automatically redirecting users to optimised web pages, enabling you to create separate sites for tablets, feature phones and smartphones.&lt;/p&gt;
        ///&lt;p&gt;- Enhancing the IsMobile and Screen Size properties in Lite data with over 50 device properties including IsTablet, screen size in millimetres, vendor, model, platform details, input methods and leve [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeHtml {
            get {
                return ResourceManager.GetString("UpgradeHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload.
        /// </summary>
        internal static string UploadButtonText {
            get {
                return ResourceManager.GetString("UploadButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Alternatively upload a Premium data file using the &quot;Browse&quot; and &quot;Upload&quot; buttons below.&lt;/p&gt;.
        /// </summary>
        internal static string UploadInstructionsHtml {
            get {
                return ResourceManager.GetString("UploadInstructionsHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find Device.
        /// </summary>
        internal static string UserAgentTesterButtonText {
            get {
                return ResourceManager.GetString("UserAgentTesterButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Enter the User Agent String to test and press the Find Device button.&lt;/p&gt;.
        /// </summary>
        internal static string UserAgentTesterInstructions {
            get {
                return ResourceManager.GetString("UserAgentTesterInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Browse button to select a Premium data file to upload..
        /// </summary>
        internal static string ValidationFileErrorText {
            get {
                return ResourceManager.GetString("ValidationFileErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The licence key must only contain upper case alpha characters or numerics..
        /// </summary>
        internal static string ValidationRegExErrorText {
            get {
                return ResourceManager.GetString("ValidationRegExErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A licence key must be entered..
        /// </summary>
        internal static string ValidationRequiredErrorText {
            get {
                return ResourceManager.GetString("ValidationRequiredErrorText", resourceCulture);
            }
        }
    }
}
